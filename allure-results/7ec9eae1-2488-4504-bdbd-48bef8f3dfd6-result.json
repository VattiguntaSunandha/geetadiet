{"uuid":"7ec9eae1-2488-4504-bdbd-48bef8f3dfd6","historyId":"efb9c9784c40acba62ea31c8264143df","fullName":"io.cucumber.testng.AbstractTestNGCucumberTests.runScenario","labels":[{"name":"package","value":"runner.MasterTestRunner"},{"name":"testClass","value":"runner.MasterTestRunner"},{"name":"testMethod","value":"runScenario"},{"name":"parentSuite","value":"Default suite"},{"name":"suite","value":"Default test"},{"name":"subSuite","value":"runner.MasterTestRunner"},{"name":"host","value":"DESKTOP-MMNJMO8"},{"name":"thread","value":"117008@DESKTOP-MMNJMO8.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"}],"links":[],"name":"Runs Cucumber Scenarios","status":"broken","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"basePath cannot be null","trace":"java.lang.IllegalArgumentException: basePath cannot be null\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:58)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)\r\n\tat io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:54)\r\n\tat io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)\r\n\tat io.restassured.internal.RequestSpecificationImpl.<init>(RequestSpecificationImpl.groovy:140)\r\n\tat io.restassured.RestAssured.createTestSpecification(RestAssured.java:1453)\r\n\tat io.restassured.RestAssured.given(RestAssured.java:654)\r\n\tat stepdefinitions.GetUserFirstNameStepDefs.for_get_request_the_authorization_is_set_to_basic_auth_with_servers_not_running(GetUserFirstNameStepDefs.java:132)\r\n\tat âœ½.For Get request, the Authorization is set to Basic auth with servers not running(file:///C:/Users/geeta/git/DieticianAPI-Hackathon/src/test/resources/features/GetUsersAPIFeatures/GetUserFirstName.feature:41)\r\n"},"stage":"finished","steps":[],"attachments":[],"parameters":[{"name":"arg1","value":"\"Optional[Validate and Test Get Request for UserAPI By First Name]\""},{"name":"arg0","value":"\"Checking if we are getting record of Users By First Name When servers no running\""}],"start":1658519300071,"stop":1658519300109}