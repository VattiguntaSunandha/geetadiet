<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-07-21T18:36:37 EDT" name="TestSuite1" finished-at="2022-07-21T18:36:47 EDT" duration-ms="9602">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:TestRunner.GetAllUsersRunner@3b0090a4]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:TestRunner.PostUsersRunner@15de0b3c]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2022-07-21T18:36:37 EDT" name="Dietician Users API" finished-at="2022-07-21T18:36:47 EDT" duration-ms="9602">
      <class name="TestRunner.PostUsersRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:TestRunner.PostUsersRunner@15de0b3c]" started-at="2022-07-21T18:36:40 EDT" name="setUpClass" finished-at="2022-07-21T18:36:40 EDT" duration-ms="35" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@64a7ad02]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:TestRunner.PostUsersRunner@15de0b3c]" started-at="2022-07-21T18:36:40 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-07-21T18:36:43 EDT" duration-ms="2647" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User is able to create a new user record"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Validate and Test POST request for Users API]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:TestRunner.PostUsersRunner@15de0b3c]" started-at="2022-07-21T18:36:43 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-07-21T18:36:45 EDT" duration-ms="1766" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User is able to create a new user record with either existing firstname or existing contact or existing email"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Validate and Test POST request for Users API]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:TestRunner.PostUsersRunner@15de0b3c]" started-at="2022-07-21T18:36:45 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-07-21T18:36:45 EDT" duration-ms="544" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User is unable to create a new user record with existing firstname, contact and email"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Validate and Test POST request for Users API]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:TestRunner.PostUsersRunner@15de0b3c]" started-at="2022-07-21T18:36:45 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-07-21T18:36:46 EDT" duration-ms="930" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User is able to create a new user record with missing mandatory field"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Validate and Test POST request for Users API]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:TestRunner.PostUsersRunner@15de0b3c]" started-at="2022-07-21T18:36:46 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-07-21T18:36:46 EDT" duration-ms="83" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User is able to create a new user record with empty request body"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Validate and Test POST request for Users API]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:TestRunner.PostUsersRunner@15de0b3c]" started-at="2022-07-21T18:36:46 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-07-21T18:36:47 EDT" duration-ms="413" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["User is not able to create a new user record when UserType is other than Dietician/Patient"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Validate and Test POST request for Users API]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <400> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <400> but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:58)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:505)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:687)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:128)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:136)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at stepdefinitions.PostUsers.user_should_be_displayed_validation_error_message_user_type_should_be_dietician_patient(PostUsers.java:337)
at âœ½.User should be displayed 400 validation error message UserType should be Dietician/Patient(file:///C:/Users/star/git/DieticianAPI-Hackathon/src/test/resources/features/Users/POSTUsers.feature:40)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:TestRunner.PostUsersRunner@15de0b3c]" started-at="2022-07-21T18:36:47 EDT" name="tearDownClass" finished-at="2022-07-21T18:36:47 EDT" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- TestRunner.PostUsersRunner -->
      <class name="TestRunner.GetAllUsersRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:TestRunner.GetAllUsersRunner@3b0090a4]" started-at="2022-07-21T18:36:37 EDT" name="setUpClass" finished-at="2022-07-21T18:36:38 EDT" duration-ms="656" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@64a7ad02]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:TestRunner.GetAllUsersRunner@3b0090a4]" started-at="2022-07-21T18:36:38 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-07-21T18:36:40 EDT" duration-ms="2378" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User is able to get list of all users"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Validate and Test GET request for Users API]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:TestRunner.GetAllUsersRunner@3b0090a4]" started-at="2022-07-21T18:36:40 EDT" name="tearDownClass" finished-at="2022-07-21T18:36:40 EDT" duration-ms="46" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- TestRunner.GetAllUsersRunner -->
    </test> <!-- Dietician Users API -->
  </suite> <!-- TestSuite1 -->
</testng-results>
